version: 0.1
component: build
timeoutInSeconds: 6000
runAs: root
shell: bash

env:
  # these are local variables to the build config, we need to declare them here so thet will follow on in subsequent build stages
  # Note that PATH seems to be automatically added to the list of variables who's value is preserved across commands
  variables:
   # HOLDINGPATH: "empty"
   JAVA_HOME: "javahome"
    
  # the value of a vaultVariable is the secret-id (in OCI ID format) stored in the OCI Vault service
  # you can then access the value of that secret in your build_spec.yaml commands
  # vaultVariables:

  # exportedVariables are made available to use as parameters in sucessor Build Pipeline stages
  exportedVariables:
    - STOREFRONTVERSION


steps:
  - type: Command
    name: "Pull base graalvm image"
    timeoutInSeconds: 40
    command: |
      echo about to pull backyards-sre-alert-exporter image
      docker pull ghcr.io/banzaicloud/backyards-sre-alert-exporter:latest
      echo backyards-sre-alert-exporter image pulled
      echo about to pull graalvm image
      docker pull ghcr.io/graalvm/graalvm-ce:java11-21.3.0
      echo graalvm image pulled 
    onFailure:
      - type: Command
        timeoutInSeconds: 40
        command: |
          echo "Handling Failure"
          echo "Failure successfully handled"
        timeoutInSeconds: 400
        runAs: root
        
  - type: Command
    name: "Extract Export variables"
    timeoutInSeconds: 40
    command: |
      echo Path is
      echo $PATH
      echo JAVA_HOME is
      echo $JAVA_HOME
      cd ${OCI_PRIMARY_SOURCE_DIR}
      echo Extracting export variables - Working in `pwd`
      export STOREFRONTVERSION=`grep "VERSION = " helidon-storefront-full/src/main/java/com/oracle/labs/helidon/storefront/resources/StatusResource.java  | awk '{print $7}' | sed -e 's/"//g' -e s'/;//'`
      echo "STOREFRONTVERSION: " $STOREFRONTVERSION
    onFailure:
      - type: Command
        timeoutInSeconds: 40
        command: |
          echo "Handling Failure"
          echo "Failure successfully handled"
        timeoutInSeconds: 400
        runAs: root

  - type: Command
    name: "Install JDK11"
    timeoutInSeconds: 10000
    command: |
      cd ~
      mkdir InstalledSoftware
      cd InstalledSoftware
      wget -q https://download.java.net/openjdk/jdk11/ri/openjdk-11+28_linux-x64_bin.tar.gz
      tar -xf openjdk-11+28_linux-x64_bin.tar.gz
      ls -l
      export JAVA_HOME=~/InstalledSoftware/jdk-11
      export PATH=$JAVA_HOME/bin:$PATH
      echo Path is
      echo $PATH
      echo JAVA_HOME is
      echo $JAVA_HOME
      java -version
    onFailure:
      - type: Command
        timeoutInSeconds: 40
        command: |
          echo "Handling Failure"
          echo "Failure successfully handled"
        timeoutInSeconds: 400
        runAs: root
        
  - type: Command
    name: "Confirm Variables and versions"
    timeoutInSeconds: 10000
    command: |
      echo PATH is 
      echo $PATH
      echo JAVA_HOME is
      echo $JAVA_HOME
      echo STOREFRONTVERSION is
      echo $STOREFRONTVERSION
      echo This should be Java 11
      java -version
      echo maven version
      mvn -v 
    onFailure:
      - type: Command
        timeoutInSeconds: 40
        command: |
          echo "Handling Failure"
          echo "Failure successfully handled"
        timeoutInSeconds: 400
        runAs: root
        
  - type: Command
    name: "Build Source and pack into conteiner image"
    timeoutInSeconds: 400
    command: |
      cd ${OCI_PRIMARY_SOURCE_DIR}/helidon-storefront-full
      echo Running maven package - Working in `pwd`
      mvn package